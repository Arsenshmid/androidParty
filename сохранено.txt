












File: C:/Users/apce1/Desktop/party7/androidParty/app/src/main/res/layout/activity_calendar.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:gravity="center"
    android:padding="16dp">

    <TextView
        android:id="@+id/calendarTitle"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Календарь"
        android:textSize="24sp"
        android:textStyle="bold"
        android:layout_marginBottom="16dp"/>

    <CalendarView
        android:id="@+id/calendarView"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_gravity="center"/>

</LinearLayout>













File: C:/Users/apce1/Desktop/party7/androidParty/app/src/main/java/com/example/party6/CalendarActivity.java
package com.example.party6;

import android.os.Bundle;

import androidx.appcompat.app.AppCompatActivity;

public class CalendarActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_calendar);
    }
}













File: C:/Users/apce1/Desktop/party7/androidParty/app/src/main/java/com/example/party6/data/model/LoggedInUser.java
package com.example.party6.data.model;

/**
 * Data class that captures user information for logged in users retrieved from LoginRepository
 */
public class LoggedInUser {

    private String userId;
    private String displayName;

    public LoggedInUser(String userId, String displayName) {
        this.userId = userId;
        this.displayName = displayName;
    }

    public String getUserId() {
        return userId;
    }

    public String getDisplayName() {
        return displayName;
    }
}












File: C:/Users/apce1/Desktop/party7/androidParty/app/src/main/java/com/example/party6/data/model/LoginActivity.java
package com.example.party6.data.model;

public class LoginActivity {
}













File: C:/Users/apce1/Desktop/party7/androidParty/app/src/main/java/com/example/party6/data/LoginDataSource.java
package com.example.party6.data;

import com.example.party6.data.model.LoggedInUser;

import java.io.IOException;

public class LoginDataSource {

    public Result<LoggedInUser> login(String username, String password) {
        try {
            if (username.equals("admin") || username.equals("user")) {
                if (password.equals("pass")) {
                    LoggedInUser loggedInUser =
                            new LoggedInUser(java.util.UUID.randomUUID().toString(), username);
                    return new Result.Success<>(loggedInUser);
                } else {
                    return new Result.Error(new Exception("Неправильный пароль"));
                }
            } else {
                return new Result.Error(new Exception("Неправильное имя пользователя"));
            }
        } catch (Exception e) {
            return new Result.Error(new IOException("Ошибка входа", e));
        }
    }

    public void logout() {
        // Not implemented
    }
}













File: C:/Users/apce1/Desktop/party7/androidParty/app/src/main/java/com/example/party6/data/LoginRepository.java
// LoginRepository.java

package com.example.party6.data;

import com.example.party6.data.model.LoggedInUser;
import android.content.Context;

/**
 * Class that requests authentication and user information from the remote data source and
 * maintains an in-memory cache of login status and user credentials information.
 */
public class LoginRepository {

    private static volatile LoginRepository instance;

    private LoginDataSource dataSource;

    private LoggedInUser user = null;

    private Context context; // Добавляем контекст для DBHelper

    private LoginRepository(LoginDataSource dataSource, Context context) {
        this.dataSource = dataSource;
        this.context = context; // Инициализируем контекст
    }

    public static LoginRepository getInstance(LoginDataSource dataSource, Context context) {
        if (instance == null) {
            instance = new LoginRepository(dataSource, context);
        }
        return instance;
    }

    public boolean isLoggedIn() {
        return user != null;
    }

    public void logout() {
        user = null;
        dataSource.logout();
    }

    private void setLoggedInUser(LoggedInUser user) {
        this.user = user;
    }

    public Result<LoggedInUser> login(String username, String password) {
        Result<LoggedInUser> result = dataSource.login(username, password);
        if (result instanceof Result.Success) {
            setLoggedInUser(((Result.Success<LoggedInUser>) result).getData());
        }
        return result;
    }
}













File: C:/Users/apce1/Desktop/party7/androidParty/app/src/main/java/com/example/party6/data/Result.java
package com.example.party6.data;

/**
 * A generic class that holds a result success w/ data or an error exception.
 */
public class Result<T> {
    // hide the private constructor to limit subclass types (Success, Error)
    private Result() {
    }

    @Override
    public String toString() {
        if (this instanceof Result.Success) {
            Result.Success success = (Result.Success) this;
            return "Success[data=" + success.getData().toString() + "]";
        } else if (this instanceof Result.Error) {
            Result.Error error = (Result.Error) this;
            return "Error[exception=" + error.getError().toString() + "]";
        }
        return "";
    }

    // Success sub-class
    public final static class Success<T> extends Result {
        private T data;

        public Success(T data) {
            this.data = data;
        }

        public T getData() {
            return this.data;
        }
    }

    // Error sub-class
    public final static class Error extends Result {
        private Exception error;

        public Error(Exception error) {
            this.error = error;
        }

        public Exception getError() {
            return this.error;
        }
    }
}












File: C:/Users/apce1/Desktop/party7/androidParty/app/src/main/java/com/example/party6/AddEventActivity.java
package com.example.party6;

import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

public class AddEventActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_add_event);

        Button addEventButton = findViewById(R.id.addEventButtonAddActivity);
        addEventButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                // Получаем данные из полей ввода
                String title = ((EditText) findViewById(R.id.eventTitleEditText)).getText().toString();
                String place = ((EditText) findViewById(R.id.eventPlaceEditText)).getText().toString();
                String date = ((EditText) findViewById(R.id.eventDateEditText)).getText().toString();

                // Создаем экземпляр DBHelper для работы с базой данных
                DBHelper dbHelper = new DBHelper(AddEventActivity.this);

                // Добавляем новое мероприятие в базу данных
                dbHelper.addEvent(title, place, date);

                // Выводим сообщение об успешном добавлении мероприятия
                Toast.makeText(AddEventActivity.this, "Мероприятие успешно добавлено!", Toast.LENGTH_SHORT).show();

                // Закрываем текущую активность
                finish();
            }
        });
    }
}













File: C:/Users/apce1/Desktop/party7/androidParty/app/src/main/java/com/example/party6/DBHelper.java
package com.example.party6;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;

import java.util.ArrayList;
import java.util.List;

public class DBHelper extends SQLiteOpenHelper {

    private static final String DATABASE_NAME = "PartyDB";
    private static final int DATABASE_VERSION = 1;

    // Таблица событий
    private static final String TABLE_EVENTS = "events";
    private static final String KEY_ID = "id";
    private static final String KEY_TITLE = "title";
    private static final String KEY_PLACE = "place";
    private static final String KEY_DATE = "date";

    // Таблица аппаратуры
    private static final String TABLE_EQUIPMENT = "equipment";
    private static final String KEY_EQUIPMENT_ID = "id";
    private static final String KEY_EQUIPMENT_NAME = "name";

    public DBHelper(Context context) {
        super(context, DATABASE_NAME, null, DATABASE_VERSION);
    }

    @Override
    public void onCreate(SQLiteDatabase db) {
        // Создание таблицы событий
        String CREATE_EVENTS_TABLE = "CREATE TABLE " + TABLE_EVENTS + "("
                + KEY_ID + " INTEGER PRIMARY KEY," + KEY_TITLE + " TEXT,"
                + KEY_PLACE + " TEXT," + KEY_DATE + " TEXT" + ")";
        db.execSQL(CREATE_EVENTS_TABLE);

        // Создание таблицы аппаратуры
        String CREATE_EQUIPMENT_TABLE = "CREATE TABLE " + TABLE_EQUIPMENT + "("
                + KEY_EQUIPMENT_ID + " INTEGER PRIMARY KEY," + KEY_EQUIPMENT_NAME + " TEXT" + ")";
        db.execSQL(CREATE_EQUIPMENT_TABLE);
    }

    @Override
    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
        // Удаление старых таблиц и создание новых при обновлении БД
        db.execSQL("DROP TABLE IF EXISTS " + TABLE_EVENTS);
        db.execSQL("DROP TABLE IF EXISTS " + TABLE_EQUIPMENT);
        onCreate(db);
    }

    // Добавление события в БД
    public void addEvent(String title, String place, String date) {
        SQLiteDatabase db = this.getWritableDatabase();

        ContentValues values = new ContentValues();
        values.put(KEY_TITLE, title);
        values.put(KEY_PLACE, place);
        values.put(KEY_DATE, date);

        db.insert(TABLE_EVENTS, null, values);
        db.close();
    }

    // Получение всех событий из БД
    public List<NewsItem> getAllEvents() {
        List<NewsItem> eventList = new ArrayList<>();
        String selectQuery = "SELECT * FROM " + TABLE_EVENTS;

        SQLiteDatabase db = this.getWritableDatabase();
        Cursor cursor = db.rawQuery(selectQuery, null);

        if (cursor.moveToFirst()) {
            do {
                NewsItem newsItem = new NewsItem(cursor.getString(1), cursor.getString(2), cursor.getString(3));
                eventList.add(newsItem);
            } while (cursor.moveToNext());
        }

        cursor.close();
        db.close();
        return eventList;
    }

    // Добавление аппаратуры в БД
    public void addEquipment(String equipment) {
        SQLiteDatabase db = this.getWritableDatabase();

        ContentValues values = new ContentValues();
        values.put(KEY_EQUIPMENT_NAME, equipment);

        db.insert(TABLE_EQUIPMENT, null, values);
        db.close();
    }
}













File: C:/Users/apce1/Desktop/party7/androidParty/app/src/main/java/com/example/party6/MainActivity.java
package com.example.party6;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.TextView;

import androidx.appcompat.app.AppCompatActivity;

import java.util.List;

public class MainActivity extends AppCompatActivity {

    private boolean isBlackBackground = false;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        Button settingsButton = findViewById(R.id.settingsButton);
        settingsButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                openSettingsActivity();
            }
        });

        // Получение данных о пользователе из предыдущей активности
        Intent intent = getIntent();
        String userType = intent.getStringExtra("userType");

        // Отображение приветствия в зависимости от типа пользователя
        TextView welcomeText = findViewById(R.id.welcomeText);
        if (userType != null && userType.equals("admin")) {
            welcomeText.setText("Добро пожаловать Admin");
            setupAdminFeatures(); // Добавляем функционал для администратора
        } else {
            welcomeText.setText("Добро пожаловать User");
        }

        // Получаем список новостей из базы данных
        List<NewsItem> newsList = getNewsFromDatabase();

        // Отображаем новости в блоках новостей
        displayNews(newsList);

        // Обработка нажатия на кнопку "Profile"
        Button profileButton = findViewById(R.id.button5);
        profileButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                openProfileActivity();
            }
        });

        // Обработка нажатия на кнопку добавления мероприятия
        Button addEventButton = findViewById(R.id.addEventButton);
        addEventButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                openAddEventActivity();
            }
        });

        // Обработка нажатия на кнопку "Дневник"
        Button diaryButton = findViewById(R.id.diaryButton);
        diaryButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                openEquipmentSelectionDialog();
            }
        });

        // Обработка нажатия на кнопку "Календарь"
        Button calendarButton = findViewById(R.id.calendarButton);
        calendarButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                openCalendarActivity();
            }
        });
    }

    private void setupAdminFeatures() {
        Button addEventButton = findViewById(R.id.addEventButton);
        addEventButton.setVisibility(View.VISIBLE); // Показываем кнопку добавления мероприятий
    }

    private List<NewsItem> getNewsFromDatabase() {
        DBHelper dbHelper = new DBHelper(this);
        return dbHelper.getAllEvents();
    }


    public void saveSelectedEquipment(String equipment) {
        // Сохраняем выбранную аппаратуру в базу данных
        DBHelper dbHelper = new DBHelper(this);
        dbHelper.addEquipment(equipment);
    }



    private void displayNews(List<NewsItem> newsList) {
        LinearLayout news1Layout = findViewById(R.id.news1Layout);
        LinearLayout news2Layout = findViewById(R.id.news2Layout);
        news1Layout.removeAllViews();
        news2Layout.removeAllViews();
        for (int i = 0; i < newsList.size(); i++) {
            NewsItem newsItem = newsList.get(i);
            TextView newsTextView = new TextView(this);
            newsTextView.setText(newsItem.getTitle() + "\nМесто: " + newsItem.getPlace() + "\nДата: " + newsItem.getDate());
            newsTextView.setTextSize(16);
            LinearLayout.LayoutParams layoutParams = new LinearLayout.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);
            layoutParams.setMargins(0, 0, 0, 16);
            newsTextView.setLayoutParams(layoutParams);
            if (i == 0) {
                news1Layout.addView(newsTextView);
            } else if (i == 1) {
                news2Layout.addView(newsTextView);
            }
        }
    }

    public void openProfileActivity() {
        Intent intent = new Intent(this, ProfileActivity.class);
        startActivity(intent);
    }

    public void openAddEventActivity() {
        Intent intent = new Intent(this, AddEventActivity.class);
        startActivity(intent);
    }

    public void openEquipmentSelectionDialog() {
        // Открываем диалог выбора аппаратуры
        Intent intent = new Intent(this, EquipmentSelectionActivity.class);
        startActivity(intent);
    }

    public void openSettingsActivity() {
        Intent intent = new Intent(this, SettingsActivity.class);
        startActivity(intent);
    }

    public void openCalendarActivity() {
        Intent intent = new Intent(this, CalendarActivity.class);
        startActivity(intent);
    }

}













File: C:/Users/apce1/Desktop/party7/androidParty/app/src/main/java/com/example/party6/NewsItem.java
package com.example.party6;

public class NewsItem {
    private String title;
    private String place;
    private String date;

    public NewsItem(String title, String place, String date) {
        this.title = title;
        this.place = place;
        this.date = date;
    }

    // Геттеры и сеттеры для всех полей
    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getPlace() {
        return place;
    }

    public void setPlace(String place) {
        this.place = place;
    }

    public String getDate() {
        return date;
    }

    public void setDate(String date) {
        this.date = date;
    }
}













File: C:/Users/apce1/Desktop/party7/androidParty/app/src/main/java/com/example/party6/ProfileActivity.java
package com.example.party6;

import androidx.appcompat.app.AppCompatActivity;
import android.os.Bundle;

public class ProfileActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_profile);
    }
}













File: C:/Users/apce1/Desktop/party7/androidParty/app/src/main/res/drawable/button_background.xml
<selector xmlns:android="http://schemas.android.com/apk/res/android">
    <item android:state_pressed="true">
        <shape android:shape="rectangle">
            <solid android:color="#FF4081" />
            <corners android:radius="8dp" />
        </shape>
    </item>
    <item>
        <shape android:shape="rectangle">
            <solid android:color="#00BCD4" />
            <corners android:radius="8dp" />
        </shape>
    </item>
</selector>













File: C:/Users/apce1/Desktop/party7/androidParty/app/src/main/res/drawable/news_background.xml
<!-- news_background.xml -->
<shape xmlns:android="http://schemas.android.com/apk/res/android"
    android:shape="rectangle">
    <gradient
        android:startColor="#FF4081"
        android:endColor="#00BCD4"
        android:angle="135"/>
    <corners android:radius="8dp"/>
</shape>













File: C:/Users/apce1/Desktop/party7/androidParty/app/src/main/res/drawable/round_button.xml
<?xml version="1.0" encoding="utf-8"?>
<shape xmlns:android="http://schemas.android.com/apk/res/android"
    android:shape="rectangle">
    <solid android:color="@color/colorPrimary"/>
    <corners android:radius="25dp"/>
</shape>













File: C:/Users/apce1/Desktop/party7/androidParty/app/src/main/res/drawable/white_background.xml
<!-- white_background.xml -->
<shape xmlns:android="http://schemas.android.com/apk/res/android"
    android:shape="rectangle">
    <solid android:color="#FFFFFF"/> <!-- Белый цвет фона -->
    <corners android:radius="8dp"/> <!-- Закругленные углы -->
</shape>













File: C:/Users/apce1/Desktop/party7/androidParty/app/src/main/res/layout/activity_add_event.xml
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:padding="16dp">

    <EditText
        android:id="@+id/eventTitleEditText"
        android:layout_width="match_parent"
        android:layout_height="48dp"
        android:hint="Название мероприятия"
        android:layout_marginBottom="16dp"/>

    <EditText
        android:id="@+id/eventPlaceEditText"
        android:layout_width="match_parent"
        android:layout_height="48dp"
        android:hint="Место проведения"
        android:layout_below="@id/eventTitleEditText"
        android:layout_marginBottom="16dp"/>

    <EditText
        android:id="@+id/eventDateEditText"
        android:layout_width="match_parent"
        android:layout_height="48dp"
        android:hint="Дата проведения"
        android:layout_below="@id/eventPlaceEditText"
        android:layout_marginBottom="16dp"/>


    <Button
        android:id="@+id/addEventButtonAddActivity"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@id/eventDateEditText"
        android:layout_alignParentEnd="true"
        android:text="Добавить мероприятие"/>

</RelativeLayout>













File: C:/Users/apce1/Desktop/party7/androidParty/app/src/main/res/layout/activity_login.xml
<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:id="@+id/container"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:paddingLeft="@dimen/activity_horizontal_margin"
    android:paddingTop="@dimen/activity_vertical_margin"
    android:background="@drawable/news_background"
    android:paddingRight="@dimen/activity_horizontal_margin"
    android:paddingBottom="@dimen/activity_vertical_margin"
    tools:context=".ui.login.LoginActivity">

    <EditText
        android:id="@+id/username"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:minHeight="48dp"
        android:layout_marginTop="96dp"
        android:hint="@string/prompt_email"
        android:inputType="textEmailAddress"
        android:selectAllOnFocus="true"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toTopOf="parent" />

    <EditText
        android:id="@+id/password"
        android:layout_width="0dp"
        android:layout_height="wrap_content"
        android:minHeight="48dp"
        android:layout_marginTop="8dp"
        android:hint="@string/prompt_password"
        android:imeActionLabel="@string/action_sign_in_short"
        android:imeOptions="actionDone"
        android:inputType="textPassword"
        android:selectAllOnFocus="true"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/username" />


    <Button
        android:id="@+id/login"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="start"
        android:layout_marginTop="16dp"
        android:layout_marginBottom="64dp"
        android:enabled="true"
        android:text="@string/action_sign_in"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="parent"
        app:layout_constraintStart_toStartOf="parent"
        app:layout_constraintTop_toBottomOf="@+id/password"
        app:layout_constraintVertical_bias="0.2" />

    <ProgressBar
        android:id="@+id/loading"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_gravity="center"
        android:layout_marginTop="64dp"
        android:layout_marginBottom="64dp"
        android:visibility="gone"
        app:layout_constraintBottom_toBottomOf="parent"
        app:layout_constraintEnd_toEndOf="@+id/password"
        app:layout_constraintStart_toStartOf="@+id/password"
        app:layout_constraintTop_toTopOf="parent"
        app:layout_constraintVertical_bias="0.3" />

</androidx.constraintlayout.widget.ConstraintLayout>












File: C:/Users/apce1/Desktop/party7/androidParty/app/src/main/res/layout/activity_main.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp"
    android:background="@drawable/news_background"
    android:visibility="visible"
    tools:context=".MainActivity"
    tools:visibility="visible">

    <TextView
        android:id="@+id/welcomeText"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        android:textSize="24sp"
        android:textStyle="bold"
        android:visibility="visible"
        tools:visibility="visible" />

    <EditText
        android:id="@+id/newsFilterEditText"
        android:layout_width="match_parent"
        android:layout_height="48dp"
        android:layout_marginStart="16dp"
        android:layout_marginEnd="16dp"
        android:layout_marginBottom="16dp"
        android:hint="поиск по названию"
        android:textColorHint="#666666"
        android:textSize="16sp" />

    <LinearLayout
        android:id="@+id/news1Layout"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        android:background="@drawable/white_background"
        android:orientation="vertical"
        android:padding="16dp">
    </LinearLayout>


    <LinearLayout
        android:id="@+id/news2Layout"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_marginBottom="16dp"
        android:background="@drawable/white_background"
        android:orientation="vertical"
        android:padding="16dp">
    </LinearLayout>

    <LinearLayout
        android:id="@+id/bottomButtonContainer"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:layout_gravity="center_horizontal"
        android:layout_marginTop="16dp"
        android:orientation="horizontal">

        <Button
            android:id="@+id/calendarButton"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:text="Календарь"
            android:layout_marginEnd="8dp"
            android:layout_marginBottom="8dp"/>

        <Button
            android:id="@+id/diaryButton"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:text="Дневник"
            android:layout_marginEnd="8dp"
            android:layout_marginStart="8dp"
            android:layout_marginBottom="8dp"/>

        <Button
            android:id="@+id/settingsButton"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:text="Настройки"
            android:layout_marginEnd="8dp"
            android:layout_marginStart="8dp"
            android:layout_marginBottom="8dp"/>

        <Button
            android:id="@+id/profileButton"
            android:layout_width="0dp"
            android:layout_height="wrap_content"
            android:layout_weight="1"
            android:text="Профиль пользователя"
            android:layout_marginStart="8dp"
            android:layout_marginBottom="8dp"/>

    </LinearLayout>

    <!-- Кнопка Profile -->
    <Button
        android:id="@+id/button5"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:background="@drawable/round_button"
        android:text="Profile"
        android:textColor="@android:color/white"
        android:layout_gravity="center_horizontal" />

    <!-- Кнопка Добавления мероприятия -->
    <Button
        android:id="@+id/addEventButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:background="@drawable/round_button"
        android:text="+"
        android:textColor="@android:color/white"
        android:layout_gravity="center_horizontal" />


</LinearLayout>













File: C:/Users/apce1/Desktop/party7/androidParty/app/src/main/res/layout/activity_profile.xml
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@drawable/news_background"
    tools:context=".ProfileActivity">

    <ImageView
        android:id="@+id/profileImage"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:src="@drawable/profile_image"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="32dp"/>

    <TextView
        android:id="@+id/profileName"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="ФИО: Иванова Карина Васильевна"
        android:textSize="18sp"
        android:layout_below="@id/profileImage"
        android:layout_marginTop="16dp"
        android:layout_centerHorizontal="true"/>

    <TextView
        android:id="@+id/profileDOB"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Дата рождения: 9 декабря, 2004 года"
        android:textSize="18sp"
        android:layout_below="@id/profileName"
        android:layout_marginTop="16dp"
        android:layout_centerHorizontal="true"/>

    <TextView
        android:id="@+id/profileEquipment"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Аппаратура: штатив"
        android:textSize="18sp"
        android:layout_below="@id/profileDOB"
        android:layout_marginTop="16dp"
        android:layout_centerHorizontal="true"/>

    <Button
        android:id="@+id/backButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Назад"
        android:layout_below="@id/profileEquipment"
        android:layout_marginTop="32dp"
        android:layout_centerHorizontal="true"/>

</RelativeLayout>













File: C:/Users/apce1/Desktop/party7/androidParty/app/src/main/res/values/colors.xml
<?xml version="1.0" encoding="utf-8"?>
<resources>
    <color name="purple_200">#FFBB86FC</color>
    <color name="purple_500">#FF6200EE</color>
    <color name="purple_700">#FF3700B3</color>
    <color name="teal_200">#FF03DAC5</color>
    <color name="teal_700">#FF018786</color>
    <color name="black">#FF000000</color>
    <color name="white">#FFFFFFFF</color>
    <color name="colorPrimary">#2196F3</color>
</resources>












File: C:/Users/apce1/Desktop/party7/androidParty/app/src/main/res/values/strings.xml
<resources>
    <string name="app_name">party6</string>
    <!-- Strings related to login -->
    <string name="prompt_email">Email</string>
    <string name="prompt_password">Password</string>
    <string name="action_sign_in">Sign in or register</string>
    <string name="action_sign_in_short">Sign in</string>
    <string name="welcome">"Welcome !"</string>
    <string name="invalid_username">Not a valid username</string>
    <string name="invalid_password">Password must be >5 characters</string>
    <string name="login_failed">"Login failed"</string>
</resources>












File: C:/Users/apce1/Desktop/party7/androidParty/app/src/main/AndroidManifest.xml
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    package="com.example.party6">

    <!-- Разрешение на доступ к интернету -->
    <uses-permission android:name="android.permission.INTERNET" />

    <application
        android:allowBackup="true"
        android:dataExtractionRules="@xml/data_extraction_rules"
        android:fullBackupContent="@xml/backup_rules"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/Theme.Party6"
        tools:targetApi="31">

        <!-- Активность MainActivity -->
        <activity
            android:name=".MainActivity"
            android:label="@string/app_name"
            android:exported="true"> <!-- Устанавливаем android:exported="true" для MainActivity -->
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

        <!-- Добавляем активность Дневник -->
        <activity android:name=".DiaryActivity"/>
        <activity android:name=".EquipmentSelectionActivity"/>
        <activity android:name=".CalendarActivity" />
        <activity android:name=".SettingsActivity" />

        <!-- Другие активности -->
        <activity android:name=".ProfileActivity" />
        <activity android:name=".AddEventActivity" />
        <activity
            android:name=".ui.login.LoginActivity"
            android:exported="true"> <!-- Устанавливаем android:exported="true" для LoginActivity -->
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>

    </application>

</manifest>













File: C:/Users/apce1/Desktop/party7/androidParty/build.gradle
// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    id 'com.android.application' version '7.4.1' apply false
    id 'com.android.library' version '7.4.1' apply false
}












File: C:/Users/apce1/Desktop/party7/androidParty/app/build.gradle
plugins {
    id 'com.android.application'
}

android {
    namespace 'com.example.party6'
    compileSdkVersion 34

    defaultConfig {
        applicationId "com.example.party6"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.11.0'
    implementation 'androidx.annotation:annotation:1.7.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.7.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.7.0'
    implementation 'androidx.sqlite:sqlite:2.1.0'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}












File: C:/Users/apce1/Desktop/party7/androidParty/app/src/main/res/layout/activity_diary.xml
<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="@drawable/news_background"
    tools:context=".DiaryActivity">

    <TextView
        android:id="@+id/textView"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Дневник"
        android:textSize="18sp"
        android:layout_centerHorizontal="true"
        android:layout_marginTop="32dp"/>

    <RadioGroup
        android:id="@+id/equipmentRadioGroup"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_below="@id/textView"
    android:layout_centerHorizontal="true"
    android:orientation="vertical"
    android:layout_marginTop="16dp">

    <RadioButton
        android:id="@+id/photoCameraRadioButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Фотоаппарат" />

    <RadioButton
        android:id="@+id/tripodRadioButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Штатив" />

    <RadioButton
        android:id="@+id/clipMicRadioButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Петличка" />

</RadioGroup>

<Button
android:id="@+id/confirmButton"
android:layout_width="wrap_content"
android:layout_height="wrap_content"
android:text="Подтвердить"
android:layout_below="@id/equipmentRadioGroup"
android:layout_centerHorizontal="true"
android:layout_marginTop="32dp"/>

    </RelativeLayout>













File: C:/Users/apce1/Desktop/party7/androidParty/app/src/main/java/com/example/party6/EquipmentSelectionActivity.java
package com.example.party6;

import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.RadioButton;
import android.widget.RadioGroup;

import androidx.appcompat.app.AppCompatActivity;

public class EquipmentSelectionActivity extends AppCompatActivity {

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_equipment_selection);

        // Находим радиогруппу и кнопку "Подтвердить"
        RadioGroup equipmentRadioGroup = findViewById(R.id.equipmentRadioGroup);
        Button confirmButton = findViewById(R.id.confirmButton);

        // Обработчик нажатия на кнопку "Подтвердить"
        confirmButton.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                // Получаем выбранный элемент из радиогруппы
                int selectedId = equipmentRadioGroup.getCheckedRadioButtonId();
                RadioButton selectedRadioButton = findViewById(selectedId);
                String selectedEquipment = selectedRadioButton.getText().toString();

                // Сохраняем выбранную аппаратуру
                saveSelectedEquipment(selectedEquipment);

                // Закрываем активность
                finish();
            }
        });
    }

    // Метод для сохранения выбранной аппаратуры
    private void saveSelectedEquipment(String equipment) {
        MainActivity mainActivity = new MainActivity();
        mainActivity.saveSelectedEquipment(equipment);
    }
}













File: C:/Users/apce1/Desktop/party7/androidParty/app/src/main/res/layout/activity_equipment_selection.xml
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:orientation="vertical"
    android:padding="16dp">

    <RadioGroup
        android:id="@+id/equipmentRadioGroup"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:orientation="vertical">

        <RadioButton
            android:id="@+id/photoCameraRadioButton"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="Фотоаппарат" />

        <RadioButton
            android:id="@+id/tripodRadioButton"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="Штатив" />

        <RadioButton
            android:id="@+id/necklaceRadioButton"
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:text="Петличка" />

    </RadioGroup>

    <Button
        android:id="@+id/confirmButton"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:text="Подтвердить"
        android:layout_gravity="center_horizontal"
        android:layout_marginTop="16dp"/>

</LinearLayout>
